pipeline {
    agent {
        docker {
            image 'gradle:6.7-jdk11'
            args '-v /root/.gradle:/root/.gradle'
        }
    }
    
    triggers {
        pollSCM('* * * * *')
    }
    
    stages {
        stage("Compile") {
            steps {
                sh "./gradlew compileJava"
            }
        }
        
        stage("Unit test") {
            steps {
                sh "./gradlew test"
            }
        }
        
        // These stages only run when Java files are modified
        stage("Java-specific checks") {
            when {
                changeset "**/src/**/*.java"
            }
            stages {
                stage("Code coverage") {
                    steps {
                        sh "./gradlew jacocoTestReport"
                        sh "./gradlew jacocoTestCoverageVerification"
                        publishHTML(target: [
                            reportDir: 'build/reports/jacoco/test/html',
                            reportFiles: 'index.html',
                            reportName: 'JaCoCo Coverage Report'
                        ])
                    }
                }
                
                stage("Static code analysis") {
                    steps {
                        sh "./gradlew checkstyleMain"
                        publishHTML(target: [
                            reportDir: 'build/reports/checkstyle/',
                            reportFiles: 'main.html',
                            reportName: 'Checkstyle Report'
                        ])
                    }
                }
            }
        }
        
        stage("Package") {
            steps {
                sh "./gradlew build"
            }
        }

        stage("Docker build") {
            steps {
                sh "docker build -t leszko/calculator:${BUILD_TIMESTAMP} ."
            }
        }

        stage("Docker login") {
            steps {
                withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'docker-hub-credentials',
                            usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
                    sh "docker login --username $USERNAME --password $PASSWORD"
                }
            }
        }

        stage("Docker push") {
            steps {
                sh "docker push leszko/calculator:${BUILD_TIMESTAMP}"
            }
        }

        stage("Update version") {
            steps {
                sh "sed  -i 's/{{VERSION}}/${BUILD_TIMESTAMP}/g' calculator.yaml"
            }
        }
        
        stage("Deploy to staging") {
            steps {
                sh "kubectl config use-context staging"
                sh "kubectl apply -f hazelcast.yaml"
                sh "kubectl apply -f calculator.yaml"
            }
        }

        stage("Acceptance test") {
            steps {
                sleep 60
                sh "chmod +x acceptance-test.sh && ./acceptance-test.sh"
            }
        }

        stage("Release") {
            steps {
                sh "kubectl config use-context production"
                sh "kubectl apply -f hazelcast.yaml"
                sh "kubectl apply -f calculator.yaml"
            }
        }
        
        stage("Smoke test") {
            steps {
                sleep 60
                sh "chmod +x smoke-test.sh && ./smoke-test.sh"
            }
        }
    }
    
    post {
        success {
            echo "pipeline ran perfectly"
        }
        failure {
            echo "pipeline failure"
        }
    }
}

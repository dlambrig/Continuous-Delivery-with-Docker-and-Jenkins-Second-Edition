pipeline {
    agent { label 'docker-agent' }

    environment {
        GRADLE_CACHE = '/home/jenkins/.gradle'  // Ensure Gradle cache is used
    }

    stages {
        stage('Validate PR Trigger') {
            steps {
                script {
                    if (!env.CHANGE_ID) {
                        error "Pipeline aborted. Only pull requests (PRs) trigger builds."
                    }
                    echo "Pipeline started for PR #${env.CHANGE_ID}"
                }
            }
        }

        stage('Prepare Environment') {
            steps {
                sh '''
                cd Chapter08/sample1
                chmod +x gradlew
                ls -l gradlew
                '''
            }
        }

        stage('Compile') {
            steps {
                sh '''
                cd Chapter08/sample1
                ./gradlew compileJava
                '''
            }
        }

        stage('Unit test') {
            steps {
                script {
                    def testResult = sh(script: '''
                        cd Chapter08/sample1
                        ./gradlew test || echo "tests fail!"
                    ''', returnStatus: true)

                    if (testResult == 0) {
                        echo "tests pass!"
                    } else {
                        echo "tests fail!"
                    }
                }
            }
        }

        stage('Static Code Analysis') {
            when {
                expression { return env.BRANCH_NAME =~ /.*feature.*/ }
            }
            steps {
                sh '''
                cd Chapter08/sample1
                ./gradlew check
                '''
            }
        }

        stage('Code Coverage') {
            when {
                branch 'master'
            }
            steps {
                sh '''
                cd Chapter08/sample1
                ./gradlew jacocoTestReport
                '''
                publishHTML(target: [
                    reportDir: 'Chapter08/sample1/build/reports/jacoco/test/html',
                    reportFiles: 'index.html',
                    reportName: "JaCoCo Code Coverage"
                ])
            }
        }
    }

    post {
        always {
            echo "Job finished: ${currentBuild.currentResult}"
        }
    }
}

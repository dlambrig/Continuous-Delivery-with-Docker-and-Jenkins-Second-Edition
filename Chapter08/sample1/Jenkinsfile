pipeline {
    agent {
        docker {
            image 'gradle:6.7-jdk11'
            args '--user root'
        }
    }

    triggers {
        pollSCM('* * * * *') // Poll GitHub every minute
    }

    stages {
        stage("Verify User") {
            steps {
                sh "whoami"  // Check the user running the script (should be 'root')
                sh "id"  // Verify group memberships
            }
        }

        stage("Compile") {
            steps {
                sh """
                cd Chapter08/sample1
                chmod +x gradlew
                ./gradlew compileJava
                """
            }
        }

        stage("Unit test") {
            steps {
                sh """
                cd Chapter08/sample1
                ./gradlew test
                """
            }
        }

        stage("Package") {
            steps {
                sh """
                cd Chapter08/sample1
                ./gradlew build
                """
            }
        }

        stage("Docker login") {
            steps {
                withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'docker-hub-credentials',
                               usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
                    sh """
                    cd Chapter08/sample1
                    docker login --username $USERNAME --password $PASSWORD
                    """
                }
            }
        }

        stage("Deploy to staging") {
            steps {
                sh """
                cd Chapter08/sample1
                kubectl config use-context staging
                kubectl apply -f hazelcast.yaml
                kubectl apply -f calculator.yaml
                """
            }
        }

        stage("Release") {
            steps {
                sh """
                cd Chapter08/sample1
                kubectl config use-context production
                kubectl apply -f hazelcast.yaml
                kubectl apply -f calculator.yaml
                """
            }
        }

        stage("Smoke test") {
            steps {
                sleep 60
                sh """
                cd Chapter08/sample1
                chmod +x smoke-test.sh
                ./smoke-test.sh
                """
            }
        }
    }

    post {
        success {
            echo "Pipeline ran perfectly"
        }
        failure {
            echo "Pipeline failure"
        }
    }
}

